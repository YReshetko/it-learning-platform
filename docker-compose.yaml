version: '3.1'

networks:
  backend:

services:
  db:
    image: db-postgres
    container_name: db-postgres
    build:
      context: .
      dockerfile: ./db/Dockerfile
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - 5432:5432
  keycloak:
    image: keycloak
    container_name: keycloak
    build:
      context: .
      dockerfile: ./keycloak/Dockerfile
    environment:
      #      KC_DB: postgres
      #      KC_DB_URL: 'jdbc:postgresql://db/keycloak'
      #      KC_DB_USERNAME: keycloak
      #      KC_DB_PASSWORD: keycloak
      #      KC_HOSTNAME: keycloak
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    volumes:
      - ./keycloak/data:/opt/keycloak/data/import
    command:
      - start-dev
      - '--import-realm'
    ports:
      - 8082:8080
  users-migration:
    build: ./svc-users/db-migration
    image: users-migration
    container_name: users-migration
    environment:
      USER_NAME: users
      USER_PASSWORD: users
      DB_NAME: users
      DB_HOST: db
      DB_PORT: 5432
    depends_on:
      - db
  users:
    image: svc-users
    container_name: svc-users
    build:
      context: .
      dockerfile: ./svc-users/Dockerfile
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER_NAME: users
      DB_USER_PASSWORD: users
      DB_NAME: users
      GRPC_HOST: localhost
      GRPC_PORT: 3000
      GRPC_NETWORK: tcp4
    depends_on:
      - users-migration
  auth:
    image: svc-auth
    container_name: svc-auth
    build:
      context: .
      dockerfile: ./svc-auth/Dockerfile
    environment:
      USERS_HOST: users
      USERS_PORT: 3000
      KEYCLOAK_HOST: ui
      KEYCLOAK_PORT: 8081
      KEYCLOAK_REALM: it-academy
      KEYCLOAK_CLIENT_ID: academy
      KEYCLOAK_CLIENT_SECRET: Ch9EWb4fMp3ksYqAVLRTf39vsFuI6s8K
      GRPC_HOST: localhost
      GRPC_PORT: 3000
      GRPC_NETWORK: tcp4
  api:
    image: api-app
    container_name: api-app
    build:
      context: .
      dockerfile: ./api-app/Dockerfile
    environment:
      HTTP_HOST: localhost
      HTTP_PORT: 9000
      AUTH_HOST: auth
      AUTH_PORT: 3000
      AUTH_REDIRECT_SCHEMA: http
      AUTH_REDIRECT_HOST: localhost
      AUTH_REDIRECT_PORT: 8081
      AUTH_REDIRECT_REALM: it-academy
      AUTH_REDIRECT_URI: http://localhost:8080
    ports:
      - 9000:9000
  ui:
    image: ui-app
    container_name: ui-app
    build:
      context: .
      dockerfile: gw-app/Dockerfile
    ports:
      - 8080:8080
      - 8081:8081
volumes:
  keycloak-volume:

