// Code generated by Constructor annotation processor. DO NOT EDIT.
// versions:
//		go: go1.20.4
//		go-annotation: 0.1.0
//		Constructor: 1.0.0

package grpc

import (
	config "github.com/YReshetko/it-learning-platform/lib-app/pkg/config"
	logrus "github.com/sirupsen/logrus"
	grpc "google.golang.org/grpc"
)

type ServerOption[T any] func(*Server[T])

func NewServer[T any](opts ...ServerOption[T]) Server[T] {
	rt := &Server[T]{}
	for _, o := range opts {
		o(rt)
	}

	return *rt
}

func WithCfg[T any](v config.GRPCServer) ServerOption[T] {
	return func(rt *Server[T]) {
		rt.cfg = v
	}
}

func WithHandler[T any](v T) ServerOption[T] {
	return func(rt *Server[T]) {
		rt.handler = v
	}
}

func WithLogger[T any](v *logrus.Entry) ServerOption[T] {
	return func(rt *Server[T]) {
		rt.logger = v
	}
}

func WithRegistrarFn[T any](v func(grpc.ServiceRegistrar, T)) ServerOption[T] {
	return func(rt *Server[T]) {
		rt.registrarFn = v
	}
}
