// Code generated by Constructor annotation processor. DO NOT EDIT.
// versions:
//		go: go1.20.4
//		go-annotation: 0.1.0
//		Constructor: 1.0.0

package routes

import (
	handlers "github.com/YReshetko/it-learning-platform/api-app/internal/http/handlers"
	auth "github.com/YReshetko/it-learning-platform/api-app/internal/http/middlewares/authorization"
	logrus "github.com/sirupsen/logrus"
)

type RouterOption func(*Router)

func NewRouter(opts ...RouterOption) Router {
	rt := &Router{}
	for _, o := range opts {
		o(rt)
	}

	return *rt
}

func WithCourses(v handlers.Courses) RouterOption {
	return func(rt *Router) {
		rt.courses = v
	}
}

func WithRegistration(v handlers.Registration) RouterOption {
	return func(rt *Router) {
		rt.registration = v
	}
}

func WithSelf(v handlers.Self) RouterOption {
	return func(rt *Router) {
		rt.self = v
	}
}

func WithServices(v *RouterServices) RouterOption {
	return func(rt *Router) {
		rt.services = v
	}
}

type RouterServicesOption func(*RouterServices)

func NewRouterServices(opts ...RouterServicesOption) RouterServices {
	rt := &RouterServices{}
	for _, o := range opts {
		o(rt)
	}

	return *rt
}

func WithAuthService(v *auth.Service) RouterServicesOption {
	return func(rt *RouterServices) {
		rt.authService = v
	}
}

func WithLogger(v *logrus.Entry) RouterServicesOption {
	return func(rt *RouterServices) {
		rt.logger = v
	}
}

func WithRedirectURL(v string) RouterServicesOption {
	return func(rt *RouterServices) {
		rt.redirectURL = v
	}
}
