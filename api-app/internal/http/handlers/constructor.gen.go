// Code generated by Constructor annotation processor. DO NOT EDIT.
// versions:
//		go: go1.20.4
//		go-annotation: 0.1.0
//		Constructor: 1.0.0

package handlers

import (
	clients "github.com/YReshetko/it-learning-platform/api-app/internal/clients"
	mappers "github.com/YReshetko/it-learning-platform/api-app/internal/http/mappers"
	logrus "github.com/sirupsen/logrus"
)

type CoursesOption func(*Courses)

func NewCourses(opts ...CoursesOption) Courses {
	rt := &Courses{}
	for _, o := range opts {
		o(rt)
	}

	return *rt
}

func WithCategoryMapper(v mappers.CategoryMapper) CoursesOption {
	return func(rt *Courses) {
		rt.categoryMapper = v
	}
}

func WithClient(v clients.CoursesClient) CoursesOption {
	return func(rt *Courses) {
		rt.client = v
	}
}

func WithLogger(v *logrus.Entry) CoursesOption {
	return func(rt *Courses) {
		rt.logger = v
	}
}

func WithTechnologyMapper(v mappers.TechnologyMapper) CoursesOption {
	return func(rt *Courses) {
		rt.technologyMapper = v
	}
}

func WithTopicMapper(v mappers.TopicMapper) CoursesOption {
	return func(rt *Courses) {
		rt.topicMapper = v
	}
}

func NewRegistration(client clients.AuthClient, logger *logrus.Entry) Registration {
	returnValue := Registration{
		client: client,
		logger: logger,
	}

	return returnValue
}

func NewSelf(client clients.AuthClient, logger *logrus.Entry) Self {
	returnValue := Self{
		client: client,
		logger: logger,
	}

	return returnValue
}
